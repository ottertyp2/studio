
{
  "entities": {
    "User": {
      "title": "User",
      "type": "object",
      "description": "Represents a user in the system.",
      "properties": {
        "username": {
            "type": "string",
            "description": "The user's unique username."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "role": {
          "type": "string",
          "enum": ["user", "superadmin"],
          "description": "The user's role in the system."
        }
      },
      "required": ["username", "email", "role"]
    },
    "SensorData": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SensorData",
      "type": "object",
      "description": "Represents a single sensor data point.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the sensor data point."
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the sensor data was recorded.",
          "format": "date-time"
        },
        "value": {
          "type": "number",
          "description": "The raw sensor value."
        },
        "convertedValue": {
          "type": "number",
          "description": "The sensor value after conversion (e.g., voltage, custom unit)."
        },
        "unit": {
          "type": "string",
          "description": "The unit of measurement for the sensor data (e.g., RAW, V, bar)."
        },
        "sensorConfigId": {
          "type": "string",
          "description": "Reference to SensorConfiguration. (Relationship: SensorConfiguration 1:N SensorData)"
        },
        "testSessionId": {
            "type": "string",
            "description": "Reference to the test session this data point belongs to."
        }
      },
      "required": [
        "id",
        "timestamp",
        "value",
        "convertedValue",
        "unit",
        "sensorConfigId"
      ]
    },
    "SensorConfiguration": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SensorConfiguration",
      "type": "object",
      "description": "Represents the configuration settings for a sensor.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the sensor configuration."
        },
        "name": {
            "type": "string"
        },
        "mode": {
          "type": "string",
          "description": "The display mode of the sensor (RAW, VOLTAGE, CUSTOM)."
        },
        "unit": {
            "type": "string"
        },
        "min": {
            "type": "number"
        },
        "max": {
            "type": "number"
        },
        "arduinoVoltage": {
          "type": "number",
          "description": "The reference voltage of the Arduino (used for voltage conversion)."
        },
        "decimalPlaces": {
            "type": "number"
        }
      },
      "required": [
        "id",
        "mode"
      ]
    },
    "AnalysisResult": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AnalysisResult",
      "type": "object",
      "description": "Represents the result of a leak analysis.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the analysis result."
        },
        "analysisModel": {
          "type": "string",
          "description": "The analysis model used (linear_leak, nonlinear_leak)."
        },
        "rSquared": {
          "type": "number",
          "description": "The R-squared value of the analysis."
        },
        "analyzedRangeStart": {
          "type": "string",
          "description": "Timestamp of the start of the analyzed data range.",
          "format": "date-time"
        },
        "analyzedRangeEnd": {
          "type": "string",
          "description": "Timestamp of the end of the analyzed data range.",
          "format": "date-time"
        },
        "isLeak": {
          "type": "boolean",
          "description": "Indicates whether a leak was detected."
        }
      },
      "required": [
        "id",
        "analysisModel",
        "rSquared",
        "analyzedRangeStart",
        "analyzedRangeEnd",
        "isLeak"
      ]
    },
    "TestSession": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TestSession",
        "type": "object",
        "description": "Represents a single test session for a specific product.",
        "properties": {
            "id": { "type": "string", "description": "Unique identifier for the test session." },
            "productId": { "type": "string", "description": "Reference to the product being tested." },
            "productName": { "type": "string", "description": "The name of the product being tested." },
            "serialNumber": { "type": "string", "description": "The serial number of the product instance." },
            "description": { "type": "string", "description": "A description of the test session." },
            "startTime": { "type": "string", "format": "date-time", "description": "Timestamp when the test started." },
            "endTime": { "type": "string", "format": "date-time", "description": "Timestamp when the test ended." },
            "status": { "type": "string", "enum": ["RUNNING", "COMPLETED", "SCRAPPED"], "description": "The status of the test session." },
            "sensorConfigurationId": { "type": "string", "description": "The sensor configuration used for this test." },
            "measurementType": { "type": "string", "enum": ["DEMO", "ARDUINO"], "description": "The source of the measurement data." }
        },
        "required": ["id", "productId", "productName", "startTime", "status", "sensorConfigurationId", "measurementType"]
    },
    "Product": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Product",
        "type": "object",
        "description": "Represents a product that can be tested.",
        "properties": {
            "id": { "type": "string", "description": "Unique identifier for the product." },
            "name": { "type": "string", "description": "The name of the product." }
        },
        "required": ["id", "name"]
    }
  },
  "auth": {
    "providers": [
      "email"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
            "entityName": "User",
            "schema": {
                "$ref": "#/entities/User"
            },
            "description": "Stores user profile information and role."
        }
      },
      {
        "path": "/sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}",
        "definition": {
          "entityName": "SensorData",
          "schema": {
            "$ref": "#/entities/SensorData"
          },
          "description": "Stores sensor data points associated with a specific sensor configuration."
        }
      },
      {
        "path": "/sensor_configurations/{sensorConfigurationId}",
        "definition": {
          "entityName": "SensorConfiguration",
          "schema": {
            "$ref": "#/entities/SensorConfiguration"
          },
          "description": "Stores all sensor configurations globally."
        }
      },
      {
        "path": "/analysis_results/{analysisResultId}",
        "definition": {
          "entityName": "AnalysisResult",
          "schema": {
            "$ref": "#/entities/AnalysisResult"
          },
          "description": "Stores leak analysis results generated from sensor data."
        }
      },
       {
        "path": "/test_sessions/{testSessionId}",
        "definition": {
          "entityName": "TestSession",
          "schema": { "$ref": "#/entities/TestSession" },
          "description": "Stores all test sessions globally."
        }
      },
      {
        "path": "/products/{productId}",
        "definition": {
            "entityName": "Product",
            "schema": { "$ref": "#/entities/Product" },
            "description": "Stores all available products."
        }
      }
    ],
    "reasoning": "This Firestore data structure is designed for a single-user or public-access model. All data is stored in global collections, removing any user-specific paths or ownership. This simplifies data access as there is no user authentication or authorization layer to manage. It's suitable for local testing or a fully public dashboard."
  }
}

