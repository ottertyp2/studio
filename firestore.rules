/**
 * @fileoverview Firestore Security Rules for the "studio" application.
 *
 * Core Philosophy:
 * This ruleset enforces a public-read, owner-write security model with NO user authentication or authorization.
 * This is suitable for local testing or a fully public dashboard.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information (username, email, role). Accessible to any signed-in user with matching id.
 * - /sensor_configurations/{sensorConfigurationId}: Stores sensor configurations. Public read, no write restrictions.
 * - /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}: Stores sensor data points. Public read, no write restrictions.
 * - /analysis_results/{analysisResultId}: Stores leak analysis results. Public read, no write restrictions.
 * - /test_sessions/{testSessionId}: Stores all test sessions. Public read, no write restrictions.
 *
 * Key Security Decisions:
 * - No user listing is allowed.
 * - All writes (create, update, delete) are completely disallowed.
 * - All reads (get, list) are public.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) Signed-in user can create their own profile document if the UID matches the document ID.
     * @allow (get) Public read.
     * @allow (list) Not allowed.
     * @allow (update) Not allowed.
     * @allow (delete) Not allowed.
     * @deny (create) If the user is not signed in.
     * @deny (create) If the user ID does not match the document ID.
     * @deny (update) If the user is not the owner.
     * @deny (delete) If the user is not the owner.
     * @principle Enforces document ownership for writes; public read access.
     */
    match /users/{userId} {
      allow get: if true;
      allow list: if false;

      allow create: if request.auth != null && request.auth.uid == userId;

      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    /**
     * @description Controls access to sensor data documents within a sensor configuration.
     * @path /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}
     * @allow (get) Public read.
     * @allow (list) Public read.
     * @allow (create) Not allowed.
     * @allow (update) Not allowed.
     * @allow (delete) Not allowed.
     * @principle Public read, no write permissions.
     */
    match /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to sensor configuration documents.
     * @path /sensor_configurations/{sensorConfigurationId}
     * @allow (get) Public read.
     * @allow (list) Public read.
     * @allow (create) Not allowed.
     * @allow (update) Not allowed.
     * @allow (delete) Not allowed.
     * @principle Public read, no write permissions.
     */
    match /sensor_configurations/{sensorConfigurationId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to analysis result documents.
     * @path /analysis_results/{analysisResultId}
     * @allow (get) Public read.
     * @allow (list) Public read.
     * @allow (create) Not allowed.
     * @allow (update) Not allowed.
     * @allow (delete) Not allowed.
     * @principle Public read, no write permissions.
     */
    match /analysis_results/{analysisResultId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Controls access to test session documents.
     * @path /test_sessions/{testSessionId}
     * @allow (get) Public read.
     * @allow (list) Public read.
     * @allow (create) Not allowed.
     * @allow (update) Not allowed.
     * @allow (delete) Not allowed.
     * @principle Public read, no write permissions.
     */
    match /test_sessions/{testSessionId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}