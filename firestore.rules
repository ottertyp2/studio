/**
 * @fileoverview Firestore Security Rules for Sensor Data App
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of use for prototyping. Data shape validation is minimal, focusing instead on authorization. Authenticated users have broad access, particularly for data deletion.
 *
 * Data Structure:
 * The Firestore database consists of three top-level collections: `sensor_data`, `sensor_configurations`, and `leak_analyses`.
 *
 * Key Security Decisions:
 * - **Open Reads**: All `get` and `list` operations are open to all users, including unauthenticated users. This simplifies initial development and data exploration.
 * - **Authenticated Deletion**: All authenticated users are permitted to delete `sensor_data` and `leak_analyses` documents, as requested by the user.
 * - **No Ownership Checks**: In this prototype, no ownership checks are enforced for data modification.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows read and delete access to sensor data for all users.
     * @path /sensor_data/{sensorDataId}
     * @allow (get, list): Any user can read sensor data.
     * @allow (delete): Any authenticated user can delete sensor data.
     * @deny (create, update): Creation and updates are disallowed.
     * @principle Allows public read and authenticated deletion of sensor data.
     */
    match /sensor_data/{sensorDataId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows read access to sensor configurations for all users, but disallows all write operations.
     * @path /sensor_configurations/{sensorConfigurationId}
     * @allow (get, list): Any user can read sensor configurations.
     * @deny (create, update, delete): No one can modify sensor configurations.
     * @principle Provides public read-only access to sensor configurations.
     */
    match /sensor_configurations/{sensorConfigurationId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows read and delete access to leak analysis results for all users.
     * @path /leak_analyses/{leakAnalysisId}
     * @allow (get, list): Any user can read leak analysis results.
     * @allow (delete): Any authenticated user can delete leak analysis results.
     * @deny (create, update): Creation and updates are disallowed.
     * @principle Allows public read and authenticated deletion of leak analysis results.
     */
    match /leak_analyses/{leakAnalysisId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if isSignedIn();
    }

    // Helper function to check if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }
  }
}