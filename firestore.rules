/**
 * @fileoverview Firestore Security Rules for Prototyping.
 *
 * Core Philosophy:
 * This ruleset defaults to a public-access model, suitable for rapid prototyping and local testing, as per the `firestore.reasoning`.
 * All data is stored in global collections, removing any user-specific paths or ownership.
 *
 * Data Structure:
 * The database consists of several top-level collections: `/users`, `/sensor_configurations`, `/analysis_results`, `/test_sessions`, and `/products`.
 * Sensor data is nested under sensor configurations: `/sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}`
 *
 * Key Security Decisions:
 * - User authentication and authorization are not enforced in this prototype.
 * - All collections are publicly readable.
 * - Write operations are NOT restricted by default, as the user requested less secure access for testing purposes.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Rules for the /users collection. Allows anyone to read and write user data.
     * @path /users/{userId}
     * @allow (get, list) Public read access to all users.
     * @allow (create, update, delete) Unrestricted access for any authenticated user to modify any user data.
     * @deny None. All authenticated users can perform all operations.
     * @principle Open access for prototyping.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Rules for the /sensor_configurations/{sensorConfigurationId}/sensor_data subcollection. Allows anyone to read and write sensor data.
     * @path /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}
     * @allow (get, list) Public read access to sensor data.
     * @allow (create, update, delete) Unrestricted access for any authenticated user to modify sensor data.
     * @deny None. All authenticated users can perform all operations.
     * @principle Open access for prototyping.
     */
    match /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Rules for the /sensor_configurations collection. Allows anyone to read and write sensor configurations.
     * @path /sensor_configurations/{sensorConfigurationId}
     * @allow (get, list) Public read access to sensor configurations.
     * @allow (create, update, delete) Unrestricted access for any authenticated user to modify sensor configurations.
     * @deny None. All authenticated users can perform all operations.
     * @principle Open access for prototyping.
     */
    match /sensor_configurations/{sensorConfigurationId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Rules for the /analysis_results collection. Allows anyone to read and write analysis results.
     * @path /analysis_results/{analysisResultId}
     * @allow (get, list) Public read access to analysis results.
     * @allow (create, update, delete) Unrestricted access for any authenticated user to modify analysis results.
     * @deny None. All authenticated users can perform all operations.
     * @principle Open access for prototyping.
     */
    match /analysis_results/{analysisResultId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Rules for the /test_sessions collection. Allows anyone to read and write test sessions.
     * @path /test_sessions/{testSessionId}
     * @allow (get, list) Public read access to test sessions.
     * @allow (create, update, delete) Unrestricted access for any authenticated user to modify test sessions.
     * @deny None. All authenticated users can perform all operations.
     * @principle Open access for prototyping.
     */
    match /test_sessions/{testSessionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Rules for the /products collection. Allows anyone to read and write product data.
     * @path /products/{productId}
     * @allow (get, list) Public read access to products.
     * @allow (create, update, delete) Unrestricted access for any authenticated user to modify product data.
     * @deny None. All authenticated users can perform all operations.
     * @principle Open access for prototyping.
     */
    match /products/{productId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}