
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    match /users/{userId} {
      allow get, list: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isSuperAdmin();
      allow delete: if isSuperAdmin() && request.auth.uid != userId;
    }

    match /sensor_configurations/{sensorConfigurationId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.ownerId) || isSuperAdmin();
    }
    
    match /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId} {
      allow read, write: if true;
    }

    match /analysis_results/{analysisResultId} {
      allow read, write: if true;
    }

    match /test_sessions/{testSessionId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    match /products/{productId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSuperAdmin();
    }

    match /mlModels/{mlModelId} {
      allow read, write: if true;
    }

    match /trainDataSets/{trainDataSetId} {
      allow read, write: if true;
    }
  }
}
