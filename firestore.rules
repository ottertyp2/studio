/**
 * @fileoverview Firestore Security Rules for BioThrust Dashboard.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model, ensuring that only authenticated users can access and modify their own data.
 *
 * Data Structure:
 * All data is nested under /users/{userId}, creating a clear separation of data between users.
 *   - /users/{userId}/sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}: Stores sensor data points for a specific configuration.
 *   - /users/{userId}/sensor_configurations/{sensorConfigurationId}: Stores sensor configurations.
 *   - /users/{userId}/analysis_results/{analysisResultId}: Stores analysis results.
 *
 * Key Security Decisions:
 * - User listing is disallowed.
 * - All write operations are strictly validated against the authenticated user's ID.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the request is made by a signed-in user.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the authenticated user ID matches the provided user ID.
     */
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /**
     * @description Checks if the authenticated user is the owner of the existing document.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /**
     * @description Enforces document ownership for writes.
     * @path /users/{userId}/sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}
     * @allow (create) - User 'user123' creates a new sensor data document under their user ID.
     * @deny (create) - User 'user456' attempts to create a sensor data document under 'user123's ID.
     * @principle Enforces document ownership for writes
     */
    match /users/{userId}/sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn() && isOwner(userId);

      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Enforces document ownership for sensor configurations.
     * @path /users/{userId}/sensor_configurations/{sensorConfigurationId}
     * @allow (create) - User 'user123' creates a new sensor configuration document under their user ID.
     * @deny (create) - User 'user456' attempts to create a sensor configuration document under 'user123's ID.
     * @principle Restricts access to a user's own data tree
     */
    match /users/{userId}/sensor_configurations/{sensorConfigurationId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn() && isOwner(userId);

      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Enforces document ownership for analysis results.
     * @path /users/{userId}/analysis_results/{analysisResultId}
     * @allow (create) - User 'user123' creates a new analysis result document under their user ID.
     * @deny (create) - User 'user456' attempts to create an analysis result document under 'user123's ID.
     * @principle Restricts access to a user's own data tree
     */
    match /users/{userId}/analysis_results/{analysisResultId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn() && isOwner(userId);

      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}