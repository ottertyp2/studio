/**
 * @fileoverview Firestore Security Rules for the application.
 *
 * Core Philosophy:
 * This ruleset is configured for a public-access model where all data is globally accessible.
 * No user authentication or authorization is required for any operations.
 *
 * Data Structure:
 * The database consists of several top-level collections:
 * - /users/{userId}: Stores user profile information.
 * - /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}: Stores sensor data.
 * - /sensor_configurations/{sensorConfigurationId}: Stores sensor configurations.
 * - /analysis_results/{analysisResultId}: Stores analysis results.
 * - /test_sessions/{testSessionId}: Stores test session information.
 * - /products/{productId}: Stores product information.
 *
 * Key Security Decisions:
 * - Public Read: All collections are publicly readable.
 * - Public Write: All collections are publicly writeable.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows read and write access to user documents for any user.
     * @path /users/{userId}
     * @allow (get, list) Any user can read user data.
     * @allow (create, update, delete) Any user can create, update, or delete user data.
     * @principle Public access.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to sensor data for any user.
     * @path /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId}
     * @allow (get, list) Any user can read sensor data.
     * @allow (create, update, delete) Any user can create, update, or delete sensor data.
     * @principle Public access.
     */
    match /sensor_configurations/{sensorConfigurationId}/sensor_data/{sensorDataId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to sensor configurations for any user.
     * @path /sensor_configurations/{sensorConfigurationId}
     * @allow (get, list) Any user can read sensor configurations.
     * @allow (create, update, delete) Any user can create, update, or delete sensor configurations.
     * @principle Public access.
     */
    match /sensor_configurations/{sensorConfigurationId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to analysis results for any user.
     * @path /analysis_results/{analysisResultId}
     * @allow (get, list) Any user can read analysis results.
     * @allow (create, update, delete) Any user can create, update, or delete analysis results.
     * @principle Public access.
     */
    match /analysis_results/{analysisResultId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to test sessions for any user.
     * @path /test_sessions/{testSessionId}
     * @allow (get, list) Any user can read test sessions.
     * @allow (create, update, delete) Any user can create, update, or delete test sessions.
     * @principle Public access.
     */
    match /test_sessions/{testSessionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to products for any user.
     * @path /products/{productId}
     * @allow (get, list) Any user can read product data.
     * @allow (create, update, delete) Any user can create, update, or delete product data.
     * @principle Public access.
     */
    match /products/{productId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}